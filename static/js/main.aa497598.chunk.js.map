{"version":3,"sources":["student-list.js","templates/calcudoku.js","puzzle-display.js","index.js"],"names":["StudentList","props","students","useState","displayedStudents","setDisplayedStudents","type","placeholder","onChange","event","query","target","value","split","filteredStudents","filter","first","last","every","pattern","regexp","RegExp","match","RefreshButton","map","renderStudent","bind","setStudents","fetchStudentList","a","listurl","process","fetch","headers","authorization","response","ok","json","list","forEach","student","studentMatch","find","active","console","log","status","className","onClick","name","id","defaultChecked","Calcudoku","data","size","grid","puzzleData","cages","work","Array","fill","index","col","Math","floor","row","matchSquare","squareMatcher","entry","cage","squares","neighbors","neighborList","isTopLeft","square","result","operation","generateGrid","renderSquare","classList","join","disabled","directions","dir","push","PuzzleDisplay","Map","setPuzzleData","fetchStudentPuzzleData","url","refresh","useCallback","activeStudents","Promise","all","useEffect","refreshId","setInterval","clearInterval","from","keys","puzzleComponent","get","puzzleName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa497598.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function StudentList(props) {\n\tconst { students } = props;\n\tconst [displayedStudents, setDisplayedStudents] = useState(students);\n\tconst filter = (event) => {\n\t\tconst query = event.target.value.split(\" \");\n\t\tconst filteredStudents = students.filter(({ first, last }) =>\n\t\t\tquery.every((pattern) => {\n\t\t\t\tconst regexp = new RegExp(pattern, \"i\");\n\t\t\t\treturn first.match(regexp) || last.match(regexp);\n\t\t\t})\n\t\t);\n\t\tsetDisplayedStudents(filteredStudents);\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<input type=\"text\" placeholder=\"Filter\" onChange={filter} />\n\t\t\t<RefreshButton {...props} />\n\t\t\t{displayedStudents.map(renderStudent.bind(null, props))}\n\t\t</div>\n\t);\n}\n\nfunction RefreshButton({ students, setStudents }) {\n\tconst fetchStudentList = async () => {\n\t\tconst listurl = `${process.env.REACT_APP_API_URL}/students`;\n\t\tconst response = await fetch(listurl, {\n\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t});\n\t\tif (response.ok) {\n\t\t\ttry {\n\t\t\t\tconst list = await response.json();\n\t\t\t\tlist.forEach((student) => {\n\t\t\t\t\tconst studentMatch = students.find(\n\t\t\t\t\t\t({ first, last }) =>\n\t\t\t\t\t\t\tfirst === student.first && last === student.last\n\t\t\t\t\t);\n\t\t\t\t\tstudent.active = studentMatch ? studentMatch.active : false;\n\t\t\t\t});\n\t\t\t\tsetStudents(list);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t} else console.log(\"HTTP error, status = \" + response.status);\n\t};\n\treturn (\n\t\t<button className=\"refresh-students\" onClick={fetchStudentList}>\n\t\t\tRefresh\n\t\t</button>\n\t);\n}\n\nfunction renderStudent({ students, setStudents }, student) {\n\tconst { first, last, active } = student;\n\treturn (\n\t\t<li key={`${first} ${last}`}>\n\t\t\t{first} {last}{\" \"}\n\t\t\t<input\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tname=\"active\"\n\t\t\t\tid={`${first}_${last}-active`}\n\t\t\t\tdefaultChecked={active ? true : false}\n\t\t\t\tonChange={() => {\n\t\t\t\t\tstudent.active = !active;\n\t\t\t\t\tsetStudents([...students]);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</li>\n\t);\n}\n","import React from \"react\";\n\nexport default function Calcudoku({ data }) {\n\tconst { size } = data;\n\tconst grid = generateGrid(data);\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"puzzle-container\" size={size}>\n\t\t\t\t<div className=\"grid-container\" size={size}>\n\t\t\t\t\t{grid.map(renderSquare)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction renderSquare(square) {\n\tconst classList = \"calcudoku-square \" + square.neighbors.join(\" \");\n\treturn (\n\t\t<div className={classList}>\n\t\t\t<div className=\"cage-indicator\">\n\t\t\t\t{square.result}\n\t\t\t\t{square.operation}\n\t\t\t</div>\n\t\t\t<input type=\"number\" value={square.value || \"\"} disabled />\n\t\t</div>\n\t);\n}\n\nfunction generateGrid(puzzleData) {\n\tconst { size, cages, work } = puzzleData;\n\tconst squares = Array(size ** 2).fill(null);\n\treturn squares.map((...[, index]) => {\n\t\tconst col = Math.floor(index / size);\n\t\tconst row = index % size;\n\t\tconst matchSquare = squareMatcher({ col, row });\n\t\tconst entry = work.find(matchSquare);\n\t\tconst cage = cages.find((cage) => cage.squares.find(matchSquare));\n\t\tconst neighbors = neighborList({ col, row }, cage);\n\t\tconst isTopLeft = cage.squares.every(\n\t\t\t(square) => square.col >= col && square.row >= row\n\t\t);\n\t\tconst result = isTopLeft ? cage.result : null;\n\t\tconst operation = isTopLeft ? cage.operation : null;\n\t\tconst value = entry ? entry.value : null;\n\t\treturn { col, row, value, neighbors, result, operation };\n\t});\n}\n\nfunction neighborList(square, cage) {\n\tconst neighbors = [];\n\tconst directions = {\n\t\t\"n-up\": { col: square.col - 1, row: square.row },\n\t\t\"n-down\": { col: square.col + 1, row: square.row },\n\t\t\"n-left\": { col: square.col, row: square.row - 1 },\n\t\t\"n-right\": { col: square.col, row: square.row + 1 },\n\t};\n\n\tfor (let dir in directions) {\n\t\tconst matchSquare = squareMatcher(directions[dir]);\n\t\tif (cage.squares.find(matchSquare)) {\n\t\t\tneighbors.push(dir);\n\t\t}\n\t}\n\n\treturn neighbors;\n}\n\nfunction squareMatcher({ col, row }) {\n\treturn (square) => square.col === col && square.row === row;\n}\n","import React, { useEffect, useState, useCallback } from \"react\";\n\nimport Calcudoku from \"./templates/calcudoku\";\n\nexport default function PuzzleDisplay({ students }) {\n\tconst [puzzleData, setPuzzleData] = useState(new Map());\n\n\tconst fetchStudentPuzzleData = async (student) => {\n\t\tconst { first, last } = student;\n\t\tconst url = `${process.env.REACT_APP_API_URL}/students/${first}_${last}/activepuzzle`;\n\t\tconst response = await fetch(url, {\n\t\t\theaders: { authorization: process.env.REACT_APP_INSTRUCTOR_PW },\n\t\t});\n\t\tconst data = await response.json();\n\t\treturn [student, data];\n\t};\n\n\tconst refresh = useCallback(() => {\n\t\tconst activeStudents = students.filter((student) => student.active);\n\t\t(async () => {\n\t\t\tconst data = await Promise.all(\n\t\t\t\tactiveStudents.map(fetchStudentPuzzleData)\n\t\t\t);\n\t\t\tsetPuzzleData(new Map(data));\n\t\t})();\n\t}, [students, setPuzzleData]);\n\n\tconst renderStudentPuzzle = (student) => {\n\t\tlet puzzleComponent;\n\t\tconst { puzzleName, ...data } = puzzleData.get(student);\n\t\tconst { first, last } = student;\n\t\tswitch (puzzleName) {\n\t\t\tcase \"calcudoku\":\n\t\t\t\tpuzzleComponent = <Calcudoku data={data} />;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tpuzzleComponent = null;\n\t\t}\n\t\treturn (\n\t\t\t<li key={`${first}_${last}`}>\n\t\t\t\t<div className=\"student-name\">\n\t\t\t\t\t{first} {last}\n\t\t\t\t</div>\n\t\t\t\t{puzzleComponent}\n\t\t\t</li>\n\t\t);\n\t};\n\n\tuseEffect(() => {\n\t\tconst refreshId = setInterval(refresh, 1000);\n\t\treturn () => clearInterval(refreshId);\n\t}, [refresh]);\n\n\treturn <ul>{Array.from(puzzleData.keys()).map(renderStudentPuzzle)}</ul>;\n}\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport StudentList from \"./student-list\";\nimport PuzzleDisplay from \"./puzzle-display\";\n\nimport \"./stylesheets/index.css\";\n\nfunction App() {\n\tconst [students, setStudents] = useState([\n\t\t{ first: \"kabirdas\", last: \"henry\", active: true },\n\t\t{ first: \"naomi\", last: \"henry\", active: false },\n\t]);\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<StudentList students={students} setStudents={setStudents} />\n\t\t\t<PuzzleDisplay students={students} />\n\t\t</div>\n\t);\n}\n\n//---------\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}